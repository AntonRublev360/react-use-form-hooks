{"version":3,"file":"main.054a3f0fe821558f7f69.bundle.js","sources":["webpack:///./src/useFormWithFields.js"],"sourcesContent":["import { useState } from 'react';\n\nexport default function useFormWithFields({\n  onSubmit,\n  onFailedSubmit = defaultOnFailedSubmit,\n  fields\n} = {}) {\n  const [isSubmitAttempted, setSubmitAttempted] = useState(false);\n  const isSubmittable = !fields.find(isNotAcceptable);\n  const handleSubmit = event => {\n    const isSubmittable = fields.reduce(\n      (isSubmittable, field) => field.handleSubmitAttempt() && isSubmittable,\n      true\n    );\n    if (!isSubmittable) {\n      setSubmitAttempted(true);\n      onFailedSubmit(event);\n    } else if (typeof onSubmit === 'function') {\n      onSubmit(event);\n    }\n  };\n\n  return {\n    isSubmittable,\n    isSubmitAttempted,\n    handleSubmit\n  };\n}\n\nfunction isNotAcceptable(field) {\n  return !field.isAcceptable;\n}\n\nfunction defaultOnFailedSubmit(e) {\n  e.preventDefault();\n}\n"],"mappings":"AAEA","sourceRoot":""}